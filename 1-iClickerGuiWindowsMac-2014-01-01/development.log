9/29/14
downloaded the “full iclicker app” from 
	https://www.dropbox.com/sh/lfr2m3gc86on8co/AADsebMILQmb1dg1kdDwaCeHa?dl=0

put in eclipse (it has the .project etc files in it)
•	Downloaded zip to desktop (it comes down as 1-iClickerGuiWindowsMac-2014-01-01/)
•	It seems that the .project file specifies the name as 1-iClickerGuiWindowsMac-2014-01-01 (ugh)
•	In eclipse, try Import -> General -> existing projects into workspace
o	Check the box “Copy projects into workspace” - IMPORTANT
•	Seemed to work

Add to git
•	Right-click the project -> Team-> Add to index
•	Commit
•	Push to upstream
•	Check on github.com – all there!

Now, need to build it.
Make build.xml
Error – ant didn’t like javac1.8
Updated to newest ant a la http://stackoverflow.com/questions/23442621/ant-class-not-found-javac1-8
	put apache ant in Applications/eclipse

Now get this runtime error from 
Test.java line 204
	originally 		System.loadLibrary("lib/hidapi-jni");
	
Exception in thread "main" java.lang.UnsatisfiedLinkError: Directory separator should not appear in library name: lib/hidapi-jni
if you take out the lib/ - then it can't find it
so need to make the lib/ a library?
hmmm..

no lib/hdapi-jni file
try hidapi.jar (mac?)
     [java] Exception in thread "main" java.lang.UnsatisfiedLinkError: no hidapi.jar in java.library.path

asked the author, Junhao Shi (99ellsworth@gmail.com) about putting the lib/ in the .jar
he replied:
no, it should be something like this:
- src
- bin
- some other random folder
- lib
    \- iClickerDriver.jar (what I wrote)
    |- hidapi.jar (java wrapper of native hidapi library)
    |- hidapi.dll (native library for windows)
    |- libhidapi-jni.jnilib (native library for Mac)

{I'm not sure what he means..}

asked him about the error above & he said:
Hey Brian,

I agree this part is always mysterious. I am pretty sure my colleague has tested this configuration on his 
Mac and it worked. Somehow it does not work on my mac. I just tested :-(

The following modification should work. You can have a try.
1. change line 204 to System.loadLibrary("hidapi-jni"), which you already did;
2. in your first attached image {Properties, java build path, libraries}, click hidapi.jar, it 
	should show an item called native library location, 
	double click it and set it to the .../1-iClickerGuiWindowsMac-2014-01-01/lib.

I tested on my Mac and it works. You may need to change everything back when you actually run it on Windows.

Junhao

tried this - no go
     [java] Exception in thread "main" java.lang.UnsatisfiedLinkError: no hidapi-jni in java.library.path

in Test.java line 204, tried "hidapi" and "hidapi.jar" "libhidapi-jni" and "libhidapi-jni.jnilib" - no good

maybe it's because the files in lib/ are in the root level of the jar, not in the lib/ folder
see http://stackoverflow.com/questions/9348643/java-jar-ant-include-folder
changed in build.xml
    	    <fileset dir="lib/"/>
to
    	    <fileset dir="." includes="lib/**"/>
no good; same error
put it back

try to find out what java.library.path is
add line to Test.java
it gives
/Users/brian/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.

info on http://stackoverflow.com/questions/1403788/java-lang-unsatisfiedlinkerror-no-dll-in-java-library-path
tried
    	File f = new File("lib/libhidapi-jni.jnilib");
		System.load(f.getAbsolutePath());
works but new error 
 [java] Exception in thread "AWT-EventQueue-0" java.lang.NoClassDefFoundError: org/jdesktop/layout/GroupLayout$Group
googling suggests that this is in swing-layout-1.0.4.jar
	tried the "native library" trick from above - no luck
this appears to be NetBeans

10/1/14
try taking out the swing-layout-1.0.4.jar from the libraries and putting it back (voodoo)
	no good

try putting in 
	    	<zipfileset src="lib/swing-layout-1.0.4.jar" />
this works 
now it can't find the class  com/csvreader/CsvReader
as well as others as I incrementally added <zipfileset
try putting in
			<zipfileset src="lib/javacsv.jar" />
	    	<zipfileset src="lib/iClickerDriverWindowsMac.jar" />
	    	<zipfileset src="lib/hidapi.jar" />
 got it running
 but if I start session, I get
     [java] java.lang.Exception: Fail to receive Set Frequency Ack
     [java] 	at iClickerDriver.IClickerDriverOld.startBaseStation(IClickerDriverOld.java:68)
     [java] 	at content.ClickerControlStation.<init>(ClickerControlStation.java:38)
     [java] 	at content.Session.<init>(Session.java:41)
     [java] 	at content.Course.createSession(Course.java:543)
     [java] 	at gui.StartSession.jButtonStartActionPerformed(StartSession.java:244)
     [java] 	at gui.StartSession.access$1(StartSession.java:241)
     [java] 	at gui.StartSession$2.actionPerformed(StartSession.java:83)
 
 I'll bet it's not loading the library properly
 go back and look at java.library.path
 /Users/brian/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
 it does include "." = the current directory
 so, it should find the file if I use System.loadLibrary("lib/hidapi-jni")
 get this error
      [java] Exception in thread "main" java.lang.UnsatisfiedLinkError: Directory separator should not appear in library name: lib/hidapi-jni
 try putting a copy of libhidapi-jni.jnilib in same directory as UBCClicker.jar and removing lib/
 
 still no good
 with white base, the program starts but when you start a question, many errors occur including:
     [java] java.lang.Exception: Fail to receive reset counter Ack
     [java] 	at iClickerDriver.IClickerDriverOld.startAcceptingVotes(IClickerDriverOld.java:152)
     [java] 	at content.ClickerControlStation.startAcceptingVotes(ClickerControlStation.java:75)
 
 so, it looks like this library change was not helpful
 	set it back to the way it was System.load(
 	
 same errors - Junhao says:
 This is really unfortunate. Re-produceable software is harder to achieve than I thought :-(

For a quick fix, assume you will always use the white base station (actually the old black one is hard to find nowadays),
 you can do the following:

Remove the in the package explorer of eclipse, expand the menu "Referenced Libraries" for your project, select 
iClickerDriverWindowsMac.jar, right click and select remove from Build Path.

Attached is a .jar that I modified only works with the white base station. You can 
1. copy that into your lib folder; 
2. expand the lib menu in the package explorer of eclipse, select iClickerDriverWindowsMac2.jar; 
3. right click and select Build Path -> add to build path.

Basically we replaced the original driver with the new one. I don't have a base station with me so I am not 
sure if it work perfectly, but I believe it will.

Let me know if it does not work out well.

Best,
Junhao

put his iClickerDriverWindowsMac2.jar in lib/
followed his directions
no good

10/3/14
Junhao says:
Hey Brian,

Sorry it does not work out. It suddenly occurred to me that my last email is really meaningless. 
My mind got stuck after a whole day's work...

Go to src->content->ClickerControlStation.java. On line 25,

change

if (driver.getDriverType() == DriverType.OLD) {

to

if (false) {

Basically we are saying ignore all the driver test, we will use the new driver no matter what.

Hope this helps. And if you got a chance, undo whatever I said in my previous email. 
The driver itself does not need to be replaced.

Best,
Junhao

1) in referenced libs, removed iClickerDriverWindowsMac2.jar
2) deleted iClickerDriverWindowsMac2.jar from lib/
3) added iClickerDriverWindowsMac.jar to libs by right-clicking it as above
4) edited ClickerControlStation.java as above


where is it dying?
looked at Session.java's stopQuestion()
it is OK up until 
		this.getQuestion(this.currentQuestionId).end();
but never gets back from that
look at Question.java's end() method
this is failing to return
		ArrayList<Vote> array = this.session.getClickerControl().stopAccpetingVotes();
that calls this:
		ArrayList<Vote> arrayList = this.driver.stopAcceptingVotes();
need to look in driver code - not part of this project

driver is at 
https://www.dropbox.com/sh/da527fp2ue4gpaz/AAC4MFLjrA61YCLSG-6HTwaaa?dl=0

try setting the printPacket in the constructor for the driver
	ClickerControlStation.java line 36 to true
when you click stop, you get these packets
     [java] 01 12 aa 96 c5 62 22 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     [java] 01 16 aa 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
then an infinite loop of these
     [java] 01 17 aa 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     [java] 01 17 aa 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
 
these are the replies from the base
asked Junhao...

the white base used above is running firmware 05.04

tried it with my black base that's running 04.05 and it WORKS!

asked Junhao if he's planning to make a version that's compatible with 5.04:
It would be nice to have a new version of the driver, but I am afraid it is really beyond my current availability. 
And I don't have a base station with me. As I mentioned above, this requires another reverse engineering process. 
I have some description about that part of work in my thesis, mostly in Chapter 2. I'd happy to answer any 
questions should you have.

- don't bother. Use as is.

Need to:
1) fix histogram "bug?" - it looks like it counts EVERY vote; not just the final votes
2) check to be sure that the .csv files are OK
3) get it to beep
4) Be sure that it doesn't hose the class config file (esp the blackboard settings)
	- check whenever it writes to config file
		- does it copy over non-changed & other settings
			- if not, then don't ever use it to change settings
5) be sure it reads the config file properly if it was generated by iClicker

10/9/14
working on beep 
use SoundUtils from http://stackoverflow.com/questions/3780406/how-to-play-a-sound-alert-in-a-java-application
made class in gui
no good - it beeps but you never get the GUI for clicker (!)
need something else besides Toolkit.getDefaultToolkit().beep()

maybe wrap the SoundUtils beeper in a thread
works OK but multiple beeps sound terrible
try putting a sleep for msec in each beep
no good
	get a beep followed by a nasty buzz

maybe try having the beep always on in a thread and then turning the volume up/down

need to get thread working right...

10/10/14
don't bother - sound will be hard to do and probably annoying
have a "votes per second" counter
	- bar graph
	- color chip
	- tone (increases pitch with votes/sec - silent below some threshhold)
test:
	- make a panel with label with votes in last second (or do in instructor toolbar)
		- run like a progress bar
			- in separate thread
			- every second, asks Test for voteTotal
				- asking for voteTotal clears the total
	- also log to a csv file
		- each vote's clicker timestamp and a local stamp
	- in class,
		- background level (no clicks)
		- have all get ready (no votes) then all at once
		- then try a geiger counter run
	- look at behavior and logs
	
SummaryList.increaseCount() - is the place to add the running total

the class Timer is an one-second display updater - use it for looking at the running total

the latest vote counter is in SummaryList = votesThisInterval
	counted in increaseCount() and modifyCount()
	getVotesThisInterval() resets the count each time read
got it going!!!

the "counts all votes as new" bug is located in SummaryListWithoutLabInfo line 15
	it never finds anything in the clickerIdToSummary - so it always runs newVote not updateVote
	
this code is in SummaryListWithLabInfo but not in SummaryListWithoutLabInfo
		Student student = summary.getStudent();
		
		for (String clickerId : student.getClickerId()) {
			this.clickerIdToSummary.put(clickerId, summary);
		}
maybe it should be
added
doesn't work
when you click a clicker:
null pointer to fix at line 46 in SummaryListWithoutLabInfo
		for (String clickerId : student.getClickerId()) {
it seems that the student is null (checked it and it's == null)
		Student student = summary.getStudent();
maybe they're not registered?

the loop above is used instead of just
	this.clickerIdToSummary.put(vote.getId(), summary)
because a student may have more than one remote regstered
	so this says that "all remotes registered to fred entered this vote"
this is not necessary for us

try just using
	this.clickerIdToSummary.put(vote.getId(), summary)
WORKS!!

*** will need to check this****
	what if a student's remote is not registered; will their vote make it into the .csv?
- checked OK!

want to log clickerid, vote's timestamp, computer timestamp
for now, have System.out.println() in SummaryListWithoutLabInfo line 17
		System.out.println(vote.getId() + "," + vote.getTimeStamp() + "," + LocalTime.now());

tried on windows - need to change library in Test.java line 231
		File f = new File("lib/hidapi-jni-64.dll");		// windows
//		File f = new File("lib/libhidapi-jni.jnilib");	// mac

works!
need java 8 for the LocalTime.now()

need to get rid of the StudentToolbar
	StartSession.java line 255 & 306 setVisible(false)

did test
	had students click in en masse - got votes/sec above 150 or so
		seemed to have some latency, but maybe that was extra voting
	
	compare the time stamps - no difference
		this is because, in Vote.java (in the driver code), it gets the time stamp from the system
			when the vote comes in (not from the base station)
        this.timeStamp = TimeProcess.getTime(TimeEnum.HMSM);
        so you wouldn't expect any latency - since the vote is stamped after any base-station delay
    
    looked at log file - very few entries, but maybe I quit before stopping session?
    
    also, it seemed to start on it's own without clicking start
    	it seems that, when you change frequency, you get a "bad button pressed" error and the question starts!
    		- "Bad button pressed" is because it sends button F (check to be sure) when changing freq
    	does this happen when ToolbarStudent is made visible?
    		YES - so keep it invisible
    
CONCLUSIONS: 
	1) need to fix the bad button starts question thing
	2) probably OK to try the progress bar "geiger meter"
		set max to 150 and cap out so it can't go higher

Bad button:
look in the driver code
https://www.dropbox.com/sh/da527fp2ue4gpaz/AAC4MFLjrA61YCLSG-6HTwaaa?dl=0
it's in ParseInstructionNew's static Vote getVote(byte[] buf) {
			...
            switch (voteButtonInt) {
            case 129:  button = ButtonEnum.A; break;
            case 130:  button = ButtonEnum.B; break;
            case 131:  button = ButtonEnum.C; break;
            case 132:  button = ButtonEnum.D; break;
            case 133:  button = ButtonEnum.E; break;
            default:   button = ButtonEnum.A; System.err.println("Bad button pressed");
            }
            ...
            
so why does it start the question - look for where this is called

Session.startQuestion() is called when you click the "Start" button
also in InstructorControl's checkInstructorButton(Vote vote)
	if this sees an "A" (the default from above), it starts the question
when is checkInstructorButton() called?
in Session.java's processVote:
	public void processVote(Vote vote) throws Exception {
		String instructorIdString = this.getCourse().getInstructorID();

		if (this.isVotingEnabled) {
			if (vote.getId().equals(instructorIdString)) {
				this.instructorControl.checkInstructorButton(vote);

so, it should be checking if the id's match - but since nobody's registered, then it might be checking if
	"" == ""
look into this..
		System.out.println("voteID=" + vote.getId() + ";instructorID=" + instructorIdString + ";");
yields:
		voteID=96C56231;instructorID=14A7F94A;Bad button pressed
so they're not blank
but we're looking at the wrong part of the if-then since voting is not enabled

		if (this.isVotingEnabled) {
			if (vote.getId().equals(instructorIdString)) {
				this.instructorControl.checkInstructorButton(vote);
			} else {
				this.getQuestion(this.currentQuestionId).newVote(vote);
			}
		} else {
			System.out.println("hi");
			this.instructorControl.checkInstructorButton(vote);
		}

prints "Bad Button pressed"
	   "hi"

so need some test in this bottom part - 
	really, should modify the driver to return "F" for the button and have that ignored
	second best - have it check that it's the instructor's remote
	third best - disable the instructor remote

ask Junhao which driver code version to use (the one that generates the iClickerDriverWindowsMac.jar used in this 
	project)

also, iclickerpoll.py reports a change of frequency as a vote of "F"
their code is (line 65-66):
        # Responses start with 0x81 for A and work their way up, so ascii-recode them
        ret['response'] = chr(self.bytes[2] - 0x81 + 65)
ascii "F" is 70 (decimal) - 65 = 5 
	81h = 129d + 5 = 134
so, should add to ParseInstructionNew's case statement:
	case 134: {set it up to return nothing - as though no vote were cast}
