/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import gui.enumoption.EnumCorrectAnswer;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

import content.Course;
import content.ListQuestion;

import setting.enumoption.CorrectAnswerDisplay;
import setting.enumoption.PollingTimer;
import setting.enumoption.TimerMode;
import utility.SetLocation;
import app.Test;

/**
 * Question list window.
 * @author Junhao
 */
@SuppressWarnings("serial")
public class QuestionList extends javax.swing.JFrame {

	/**
     * Creates new form QuestionList
     * @param test 
     */
    public QuestionList(Test test) {
    	this.test = test;
    	this.listQuestions = new ArrayList<ListQuestion> ();
    	this.selectedQuestion = null;
    	this.ListQuestionPath = null;
        initComponents();
        SetLocation.setCenterScreen(this, 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
    	buttonGroupPollingTimer = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonMoveUp = new javax.swing.JButton();
        jButtonMoveDown = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelQuestionInformation = new javax.swing.JPanel();
        jLabelQuestionInformation1 = new javax.swing.JLabel();
        jLabelQuestionTitle = new javax.swing.JLabel();
        jTextFieldQuestionTitle = new javax.swing.JTextField();
        jLabelResultsChartLabels = new javax.swing.JLabel();
        jLabelPoints = new javax.swing.JLabel();
        jTextFieldA = new javax.swing.JTextField();
        jTextFieldAPoint = new javax.swing.JTextField();
        jTextFieldB = new javax.swing.JTextField();
        jTextFieldBPoint = new javax.swing.JTextField();
        jTextFieldC = new javax.swing.JTextField();
        jTextFieldCPoint = new javax.swing.JTextField();
        jTextFieldDPoint = new javax.swing.JTextField();
        jTextFieldEPoint = new javax.swing.JTextField();
        jLabelA = new javax.swing.JLabel();
        jLabelB = new javax.swing.JLabel();
        jLabelC = new javax.swing.JLabel();
        jLabelD = new javax.swing.JLabel();
        jLabelE = new javax.swing.JLabel();
        jComboBoxAnswer = new javax.swing.JComboBox<String> ();
        jLabelAnswer = new javax.swing.JLabel();
        jLabelRequiredField = new javax.swing.JLabel();
        jLabelQuestionInformation2 = new javax.swing.JLabel();
        jTextFieldD = new javax.swing.JTextField();
        jTextFieldE = new javax.swing.JTextField();
        jPanelQuestionSettings = new javax.swing.JPanel();
        jLabelQuestionSettings = new javax.swing.JLabel();
        jLabelPollingTimer = new javax.swing.JLabel();
        jRadioButtonCountUp = new javax.swing.JRadioButton();
        jRadioButtonCountDown = new javax.swing.JRadioButton();
        jComboBoxCountDown = new javax.swing.JComboBox<String> ();
        jLabelMinSec = new javax.swing.JLabel();
        jLabelDisplayOptions = new javax.swing.JLabel();
        jCheckBoxShowCorrectAnswer = new javax.swing.JCheckBox();
        jButtonNew = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();

        this.setResizable(false);
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.setTitle("Question List");
        
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "#", "Question Title"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(167);
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
			public void valueChanged(ListSelectionEvent evt) {
				jTableRowSelected(evt);
			}
        });
        
        jButtonMoveUp.setText("/\\");
        jButtonMoveUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMoveUpActionPerformed(evt);
            }
        });

        jButtonMoveDown.setText("\\/");
        jButtonMoveDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMoveDownActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabelQuestionInformation1.setText("Add your question information below. The Question Title and Results Labels will");

        jLabelQuestionTitle.setText("Question Title*:");

        jLabelResultsChartLabels.setText("Results Chart Labels");

        jLabelPoints.setText("Points");

        jLabelA.setText("A:");

        jLabelB.setText("B:");

        jLabelC.setText("C:");

        jLabelD.setText("D:");

        jLabelE.setText("E:");

        jComboBoxAnswer.setModel(new javax.swing.DefaultComboBoxModel<String> (new String[] { "A", "B", "C", "D", "E", "NA" }));
        jComboBoxAnswer.setSelectedIndex(5);
 
        jLabelAnswer.setText("Answer:");

        jLabelRequiredField.setText("* Required field");

        jLabelQuestionInformation2.setText("appear on the polling results chart.");

        javax.swing.GroupLayout jPanelQuestionInformationLayout = new javax.swing.GroupLayout(jPanelQuestionInformation);
        jPanelQuestionInformation.setLayout(jPanelQuestionInformationLayout);
        jPanelQuestionInformationLayout.setHorizontalGroup(
            jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelQuestionInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelQuestionInformationLayout.createSequentialGroup()
                        .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelQuestionTitle)
                            .addComponent(jLabelA)
                            .addComponent(jLabelB)
                            .addComponent(jLabelC)
                            .addComponent(jLabelD)
                            .addComponent(jLabelE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanelQuestionInformationLayout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jLabelAnswer)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                                .addComponent(jLabelRequiredField))
                            .addGroup(jPanelQuestionInformationLayout.createSequentialGroup()
                                .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                                    .addComponent(jTextFieldC, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldA, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelResultsChartLabels, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldB, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldAPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldBPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldCPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldDPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldEPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelPoints)))
                            .addComponent(jTextFieldQuestionTitle))
                        .addContainerGap())
                    .addGroup(jPanelQuestionInformationLayout.createSequentialGroup()
                        .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelQuestionInformation2)
                            .addComponent(jLabelQuestionInformation1))
                        .addGap(0, 64, Short.MAX_VALUE))))
        );
        jPanelQuestionInformationLayout.setVerticalGroup(
            jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelQuestionInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelQuestionInformation1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelQuestionInformation2)
                .addGap(18, 18, 18)
                .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelQuestionTitle)
                    .addComponent(jTextFieldQuestionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelResultsChartLabels)
                    .addComponent(jLabelPoints))
                .addGap(18, 18, 18)
                .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldAPoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelA))
                .addGap(18, 18, 18)
                .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBPoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelB))
                .addGap(18, 18, 18)
                .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCPoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelC))
                .addGap(18, 18, 18)
                .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDPoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelD)
                    .addComponent(jTextFieldD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldEPoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelE))
                .addGap(18, 18, 18)
                .addGroup(jPanelQuestionInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAnswer)
                    .addComponent(jLabelRequiredField))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Question Information", jPanelQuestionInformation);

        jLabelQuestionSettings.setText("The settings below will overwrite your session settings for this question only.");

        jLabelPollingTimer.setText("Polling Timer");

        buttonGroupPollingTimer.add(jRadioButtonCountUp);
        jRadioButtonCountUp.setText("Count up from 0 seconds");
        jRadioButtonCountUp.setSelected(true);
        jRadioButtonCountUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCountUpActionPerformed(evt);
            }
        });

        buttonGroupPollingTimer.add(jRadioButtonCountDown);
        jRadioButtonCountDown.setText("Count down from");
        jRadioButtonCountDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonCountDownActionPerformed(evt);
            }
        });

        jComboBoxCountDown.setModel(new javax.swing.DefaultComboBoxModel<String> (new String[] { "00:15", "00:30", "00:45", "01:00", "01:15", "01:30", "01:45", "02:00", "02:15", "02:30", "02:45", "03:00", "03:15", "03:30", "03:45", "04:00", "" }));

        jLabelMinSec.setText("(min:sec)");

        jLabelDisplayOptions.setText("Display Options");

        jCheckBoxShowCorrectAnswer.setText("Show correct answer when polling is stopped");

        javax.swing.GroupLayout jPanelQuestionSettingsLayout = new javax.swing.GroupLayout(jPanelQuestionSettings);
        jPanelQuestionSettings.setLayout(jPanelQuestionSettingsLayout);
        jPanelQuestionSettingsLayout.setHorizontalGroup(
            jPanelQuestionSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelQuestionSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelQuestionSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelQuestionSettings)
                    .addComponent(jLabelPollingTimer)
                    .addComponent(jLabelDisplayOptions)
                    .addGroup(jPanelQuestionSettingsLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanelQuestionSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonCountUp)
                            .addGroup(jPanelQuestionSettingsLayout.createSequentialGroup()
                                .addComponent(jRadioButtonCountDown)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxCountDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelMinSec))
                            .addComponent(jCheckBoxShowCorrectAnswer))))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanelQuestionSettingsLayout.setVerticalGroup(
            jPanelQuestionSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelQuestionSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelQuestionSettings)
                .addGap(18, 18, 18)
                .addComponent(jLabelPollingTimer)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonCountUp)
                .addGap(18, 18, 18)
                .addGroup(jPanelQuestionSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonCountDown)
                    .addComponent(jComboBoxCountDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMinSec))
                .addGap(18, 18, 18)
                .addComponent(jLabelDisplayOptions)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxShowCorrectAnswer)
                .addContainerGap(153, Short.MAX_VALUE))
        );

        //jTabbedPane1.addTab("Question Settings", jPanelQuestionSettings);

        jButtonNew.setText("New");
        jButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewActionPerformed(evt);
            }
        });

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					jButtonCloseActionPerformed(evt);
				} catch (IOException e) {
					e.printStackTrace();
				}
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonMoveUp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonMoveDown)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDelete)
                                .addGap(0, 57, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButtonSave)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonNew))
                            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonClose)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonMoveUp)
                    .addComponent(jButtonMoveDown)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonNew)
                    .addComponent(jButtonSave))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonClose)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    private void jTableRowSelected(ListSelectionEvent evt) {
    	int index = this.jTable1.getSelectedRow();
    	
    	if (index == -1) return;
    	
    	ListQuestion listQuestion = this.listQuestions.get(index);
    	
    	this.jTextFieldQuestionTitle.setText(listQuestion.getTitle());
    	this.jTextFieldA.setText(listQuestion.getChoiceA());
    	this.jTextFieldB.setText(listQuestion.getChoiceB());
    	this.jTextFieldC.setText(listQuestion.getChoiceC());
    	this.jTextFieldD.setText(listQuestion.getChoiceD());
    	this.jTextFieldE.setText(listQuestion.getChoiceE());
    	this.jTextFieldAPoint.setText(listQuestion.getAPoint() + "");
    	this.jTextFieldBPoint.setText(listQuestion.getBPoint() + "");
    	this.jTextFieldCPoint.setText(listQuestion.getCPoint() + "");
    	this.jTextFieldDPoint.setText(listQuestion.getDPoint() + "");
    	this.jTextFieldEPoint.setText(listQuestion.getEPoint() + "");
    	this.jComboBoxAnswer.setSelectedIndex(listQuestion.getEnumCorrectAnswer().ordinal());
    	
    	if (listQuestion.getTimerMode().equals(TimerMode.UP)) {
    		this.jRadioButtonCountUp.doClick();
    	} else {
    		this.jRadioButtonCountDown.doClick();
    	}
    	
    	this.jComboBoxCountDown.setSelectedIndex(listQuestion.getPollingTimer().ordinal());
    	
    	this.jCheckBoxShowCorrectAnswer.setSelected(listQuestion.getCorrectAnswerDisplay().equals(CorrectAnswerDisplay.SHOW));
    	
    	this.selectedQuestion = this.listQuestions.get(index);
    }
    
    private void jButtonMoveUpActionPerformed(java.awt.event.ActionEvent evt) {
    	int index = this.jTable1.getSelectedRow();
    	
    	if (index <= 0) return;
    	
    	this.swapElement(index, index - 1);
    	
    	this.jTable1.clearSelection();
    	
    	this.updateList();
    	
    	this.jTable1.setRowSelectionInterval(index - 1, index - 1);
    }

    private void jButtonMoveDownActionPerformed(java.awt.event.ActionEvent evt) {
    	int index = this.jTable1.getSelectedRow();
    	
    	if (index < 0 || index == this.jTable1.getRowCount() - 1) return;
    	
    	this.swapElement(index, index + 1);
    	
    	this.jTable1.clearSelection();
    	
    	this.updateList();
    	
    	this.jTable1.setRowSelectionInterval(index + 1, index + 1);
    }
    
    /**
     * Given indices of two element in the array list, swap them.
     * @param i
     * @param j
     */
    private void swapElement(int i, int j) {
    	ListQuestion temp = this.listQuestions.get(j);
    	this.listQuestions.set(j, this.listQuestions.get(i));
    	this.listQuestions.set(i, temp);
    }

    /**
     * Update the table using the array list.
     */
    private void updateList() {
    	DefaultTableModel model = (DefaultTableModel)this.jTable1.getModel(); 
    	
    	int rows = model.getRowCount();
    	for(int i = rows - 1; i >= 0; i--) {
    		model.removeRow(i);
    	}
    	
    	for (int i = 0; i < this.listQuestions.size(); i++) {
    		model.addRow(new Object [] {new Integer(i + 1).toString(), this.listQuestions.get(i).getTitle()});
    	}
    }
    
    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {
    	int index = this.jTable1.getSelectedRow();
    	
    	if (index == -1) return;
    	
    	if (this.selectedQuestion == this.listQuestions.get(index)) {
    		this.selectedQuestion = null;
    		this.clearFields();
    	}
    	
    	this.listQuestions.remove(index);
    	
    	this.jTable1.clearSelection();
    	
    	this.updateList();
    	
    	if (this.listQuestions.size() > index) {
    		this.jTable1.setRowSelectionInterval(index, index);
    	} else if (this.listQuestions.size() > 0) {
    		this.jTable1.setRowSelectionInterval(this.listQuestions.size() - 1, this.listQuestions.size() - 1);
    	}
    }

    private void jRadioButtonCountUpActionPerformed(java.awt.event.ActionEvent evt) {
    	this.jComboBoxCountDown.setEnabled(false);
    	this.jLabelMinSec.setEnabled(false);
    }
    
    private void jRadioButtonCountDownActionPerformed(java.awt.event.ActionEvent evt) {
        this.jComboBoxCountDown.setEnabled(true);
    	this.jLabelMinSec.setEnabled(true);
    }
    
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {
        if (this.checkQuestion() == false) return;
        
        ListQuestion listQuestion = new ListQuestion(this.jTextFieldQuestionTitle.getText(), "", 
        		this.jTextFieldA.getText(), this.jTextFieldB.getText(), this.jTextFieldC.getText(), 
        		this.jTextFieldD.getText(), this.jTextFieldE.getText(),
        		this.jTextFieldAPoint.getText().equals("") ? 0 : Integer.parseInt(this.jTextFieldAPoint.getText()),
        		this.jTextFieldBPoint.getText().equals("") ? 0 : Integer.parseInt(this.jTextFieldBPoint.getText()),
        		this.jTextFieldCPoint.getText().equals("") ? 0 : Integer.parseInt(this.jTextFieldCPoint.getText()),
        		this.jTextFieldDPoint.getText().equals("") ? 0 : Integer.parseInt(this.jTextFieldDPoint.getText()),
        		this.jTextFieldEPoint.getText().equals("") ? 0 : Integer.parseInt(this.jTextFieldEPoint.getText()),
        		EnumCorrectAnswer.valueOf(this.jComboBoxAnswer.getSelectedItem().toString()), 
        		this.jRadioButtonCountUp.isSelected() ? TimerMode.UP :TimerMode.DOWN, 
        		PollingTimer.values()[this.jComboBoxCountDown.getSelectedIndex()],
        		this.jCheckBoxShowCorrectAnswer.isSelected() ? CorrectAnswerDisplay.SHOW : CorrectAnswerDisplay.HIDE);
        		
       this.listQuestions.add(listQuestion);
       
       this.selectedQuestion = listQuestion;
       
       this.updateList();
    }

    /**
     * Check if the question entered is legal (must have a question title).
     * @return true if legal, false if illegal.
     */
    private boolean checkQuestion() {
    	String title = this.jTextFieldQuestionTitle.getText();
    	
    	if (title.equals("")) {
        	JOptionPane.showMessageDialog(this, "A question must have a title.", "Empty title", JOptionPane.ERROR_MESSAGE);
			return false;
        }
        
        try {
        	String aPoint = this.jTextFieldAPoint.getText();
        	if (aPoint.equals("") == false) Integer.parseInt(aPoint);
        	String bPoint = this.jTextFieldAPoint.getText();
        	if (bPoint.equals("") == false) Integer.parseInt(bPoint);
        	String cPoint = this.jTextFieldAPoint.getText();
        	if (cPoint.equals("") == false) Integer.parseInt(cPoint);
        	String dPoint = this.jTextFieldAPoint.getText();
        	if (dPoint.equals("") == false) Integer.parseInt(dPoint);
        	String ePoint = this.jTextFieldAPoint.getText();
        	if (ePoint.equals("") == false) Integer.parseInt(ePoint);
        } catch (NumberFormatException e) {
        	JOptionPane.showMessageDialog(this, "Points should be integers.", "Non-integer point", JOptionPane.ERROR_MESSAGE);
        	return false;
        }
        
        return true;
    }
    
    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {
        this.selectedQuestion = null;
    	this.clearFields();
    }

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        if (this.ListQuestionPath == null) {
        	if (this.listQuestions.size() != 0) {
	        	JFileChooser jFileChooser = new JFileChooser();
	        	jFileChooser.setCurrentDirectory(new java.io.File("./Classes/" + this.test.getCourse().getCourseName()));
	        	jFileChooser.setSelectedFile(new java.io.File("QuestionList.csv"));
	        	jFileChooser.setAcceptAllFileFilterUsed(false);
	        	jFileChooser.addChoosableFileFilter(new FileNameExtensionFilter(".csv Files", new String[] { "csv" }));
	        	
	        	int returnVal = jFileChooser.showSaveDialog(this);
	        	
	            if (returnVal == JFileChooser.APPROVE_OPTION) {
	                File file = jFileChooser.getSelectedFile();
	                Course.storeQuestionList(file.getPath(), listQuestions);
	            } else {
	            	this.setVisible(false);
	            	return;
	            }
        	}
        } else {
        	Course.storeQuestionList(this.ListQuestionPath, listQuestions);
        }
        
        this.listQuestions.clear();
        this.setVisible(false);
    }
    
    /**
     * Empty list.
     */
    public void clearList() {
    	DefaultTableModel model = (DefaultTableModel)this.jTable1.getModel(); 
    	
    	int rows = model.getRowCount();
    	for(int i = rows - 1; i >= 0; i--) {
    		model.removeRow(i);
    	}
    }
    
    /**
     * Load list.
     * @throws IOException 
     */
    public void loadList(String path) throws IOException {
    	this.ListQuestionPath = path;
    	
    	if (this.listQuestions != null) {
    		this.listQuestions.clear();
    	}
    	
    	this.listQuestions = Course.loadQuestionList(ListQuestionPath);
    	
    	this.updateList();
    }
    
    /**
     * Clear all fields.
     */
	public void clearFields() {
        this.jTextFieldQuestionTitle.setText("");
        this.jTextFieldA.setText("");
        this.jTextFieldB.setText("");
        this.jTextFieldC.setText("");
        this.jTextFieldD.setText("");
        this.jTextFieldE.setText("");
        this.jTextFieldAPoint.setText("");
        this.jTextFieldBPoint.setText("");
        this.jTextFieldCPoint.setText("");
        this.jTextFieldDPoint.setText("");
        this.jTextFieldEPoint.setText("");
        this.jComboBoxAnswer.setSelectedIndex(5);
        
        this.jRadioButtonCountUp.setSelected(true);
        this.jRadioButtonCountDown.setSelected(false);
        this.jComboBoxCountDown.setSelectedIndex(1);
        this.jComboBoxCountDown.setEnabled(false);
        this.jCheckBoxShowCorrectAnswer.setSelected(false);
	}

	public void clearListQuestionPath() {
		this.ListQuestionPath = null;
	}
	
	public void setFocusToTitle() {
		this.jTextFieldQuestionTitle.requestFocus();
	}
	
    private Test test;
    private ArrayList<ListQuestion> listQuestions;
    private ListQuestion selectedQuestion;
    private String ListQuestionPath;
    
    // Variables declaration - do not modify
    private javax.swing.ButtonGroup buttonGroupPollingTimer;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonMoveDown;
    private javax.swing.JButton jButtonMoveUp;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JCheckBox jCheckBoxShowCorrectAnswer;
    private javax.swing.JComboBox<String> jComboBoxAnswer;
    private javax.swing.JComboBox<String> jComboBoxCountDown;
    private javax.swing.JLabel jLabelA;
    private javax.swing.JLabel jLabelAnswer;
    private javax.swing.JLabel jLabelB;
    private javax.swing.JLabel jLabelC;
    private javax.swing.JLabel jLabelD;
    private javax.swing.JLabel jLabelDisplayOptions;
    private javax.swing.JLabel jLabelE;
    private javax.swing.JLabel jLabelMinSec;
    private javax.swing.JLabel jLabelPoints;
    private javax.swing.JLabel jLabelPollingTimer;
    private javax.swing.JLabel jLabelQuestionInformation1;
    private javax.swing.JLabel jLabelQuestionInformation2;
    private javax.swing.JLabel jLabelQuestionSettings;
    private javax.swing.JLabel jLabelQuestionTitle;
    private javax.swing.JLabel jLabelRequiredField;
    private javax.swing.JLabel jLabelResultsChartLabels;
    private javax.swing.JPanel jPanelQuestionInformation;
    private javax.swing.JPanel jPanelQuestionSettings;
    private javax.swing.JRadioButton jRadioButtonCountDown;
    private javax.swing.JRadioButton jRadioButtonCountUp;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldA;
    private javax.swing.JTextField jTextFieldAPoint;
    private javax.swing.JTextField jTextFieldB;
    private javax.swing.JTextField jTextFieldBPoint;
    private javax.swing.JTextField jTextFieldC;
    private javax.swing.JTextField jTextFieldCPoint;
    private javax.swing.JTextField jTextFieldD;
    private javax.swing.JTextField jTextFieldDPoint;
    private javax.swing.JTextField jTextFieldE;
    private javax.swing.JTextField jTextFieldEPoint;
    private javax.swing.JTextField jTextFieldQuestionTitle;
    // End of variables declaration
}
