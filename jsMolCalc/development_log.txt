11/24/12
started off
following tutorial from http://www.vogella.com/articles/GWT/article.html
- did not use GoogleAppEngine

put jme.jar in war/ directory to try to build it into page

working

pasted in code for calculations from MolCalc 3.0
put all in jsMolCalc.java
	make Atom and AtomSpec classes inside jsMolCalc

11/25/12
added molecules.txt and ability to load random molecule
works when compiled and posted to web

12/3/12
added "modification targets" and changed layout

12/5/12
added ability to import and export molfiles

12/19/12
need to fix - when you draw an illegal molecule, it gets marked as "correct"
	- need to fix that illegal molecule can't be correct
	- need two methods that are accessible from the page:
		public String isValid() - returns "true" or "false" if molecule is OK or not
		public String getError() - returns "" or the error string (if not valid)


6/7/13
reconstructed (had been lost in migration to git)

started new Google/Web Application Project

restored from time machine backup from March 2013
dragged folders into git directory

error - couldn't find /Users/brian/git/JavaCodeFromSVN/jsMolCalc/war/WEB-INF/appengine-web.xml
just stole one from jsVGL
ditto for /Users/brian/git/JavaCodeFromSVN/jsMolCalc/war/WEB-INF/logging.properties

missing other crap
copy in all from default version to war/WEB-INF/lib

seems to work but java plugin is ng on apple!

try with jsme from http://peter-ertl.com/jsme/
version 2013-05-30
put in the /jsme into war/

got error
Unable to find 'jsme.gwt.xml' on your classpath; could be a typo, or maybe you forgot to include a classpath entry for source?
maybe it's trying to build jsme?
weird - you don't get the error until you try to connect (it seems to build fine)

have to compile and then run from browser (not chrome - it won't run unless on a server)
firefox is best
needed to change native methods to use $doc.JME not $doc.getElementById('JME')
works!

6/24/13
working on version for web
	nix the load and save molfile parts - have them only work if non-null
	change html to be more friendly

6/3/14
stuff to do to make better edX integration and gamification:
1) have methods for �getGrade� that will return a string something like:
	F=C2H6O(+)
	H=T
	I=F
	P=0.27
where:
F= formula
H= T/F for �can it make H-bonds?�
I = T/F for �can it make ionic-bonds?�
P= <float> for hydrophobicity (<0 => phobic; otherwise �philic)

2) for the edX part - use SMILES for saving state

testing new setup

had to upgrade eclipse and a lot of fucking headaches
now still get motherfucking "Unable to find jsme.gwt.xml on your classpath"
try compiling it
this finally works!!

6/4/14
set up to make page for embedding in edx (http://ca.readthedocs.org/en/latest/exercises_tools/custom_javascript.html)
	download the JSInput files
name them all edXMolCalc.whatever
edXMolCalc.css - copy in text from webGLDemo.css
edXMolCalc.js - webGLDemo.js
edXMolCalc.html - webGLDemo.html
edit as needed

almost working - but in JSConsole, the native methods "$doc" doesn't seem to work now?
why?
but if, in console, you do "document.JME.jmeFile()" it works AOK and returns the jme file
hmm...

it's not the $doc - this is how the JSNI methods work
	http://www.gwtproject.org/doc/latest/DevGuideCodingBasicsJSNI.html

once it's working
	getState & setState can just call getJME() {or whatever} on the JSME
		setState also sends a click message to the calculate button
	getGrade 
		when you calculate, it sends the grade info described above to a hidden div
		getGrade scoops this up