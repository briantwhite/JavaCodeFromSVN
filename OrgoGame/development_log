how to make it run
edit the source
build with the JWTK
run with the JWTK

AOK

to get from CVS
- check out as
- select C:/WTK25/apps
- it will expand into C:/WTK25/apps/OrgoGame

to include images, will need to make a jar
created classes/images
created build.xml
- just to make jar
 
not working - even though the .jad talks about OrgoGame.jar
it does not use that when running, it uses the classes in classes/
not the jar

punted

just get it running for now

put images in classes/images & see if it works

it does

to make pix:
- in mac, run chem draw
- copy
- new from clipboard in graphicconverter
- save to desktop
- drag to images folder in parallels

got it to load images into array
made first State: ReactantState

8/26/07
got model-view-controller to work with starting material and product states
model = ProblemSet
view = all the Displayables
controller = Controller

can toggle back & forth between starting mat & prod

8/27/07
working on getting problemSet accessor methods
and some UI stuff

8/28/07
got all major states going
need to make SelectReactionState work

8/29/07a
got SelectReactionState to work
add and delete work AOK
but need to get add in the middle of the list working
- need a flag to carry over?
- put in CVS

8/29/07b
got the add in middle thing to work
got it to check answer ok
to do
- get scoring to work
- if correct, automatically do new problem after the alert returns

8/30/07
the prev versions were for modp2.0 and cldc1.1
this is not standard on all phones
therefore, go to midp1.0 and cldc1.0
change in the Java WTK for CLCD 2.5
 - in settings, set API to TargetPlatform MIDP 1.0

- had to fix:
 - controller: replace with instanceof
 - problemSet: no nextInt(4) allowed - replace with code from book
 - list states don't have delete all - add to ListState
 	this was no good
 		-deleted from SelectReactionState (not needed)
 		- harder with EditAnswerState - size() doesn't seem to work
 			just make a new one each time
 - list doesn't have setSelectCommand - nuke
 
 works AOK (finally!)
 
 problem - if you have it do something right after the alert that says
 you got it right - it never shows the alert!
 
 9/1/07
 strange behavior - when you get it wrong after getting it right a few times (?)
 it freezes...
 put in lots of prints in ProblemSet.isCurrentListCorrect()
 but still unclear...
 
 9/4/07
 if you give an answer with the right number of steps but a wrong rxn
 then one with the wrong number of steps
 it goes into lala land 
 but ONLY IF THE DEBUG CODE IS MISSING
 if debug code present, it works AOK!!!
 (sometimes it goes to lala land with debug code missing...)
 
 test setup
 SM: amide
 P: alcohol
 wrong ans: OH-, reduction
 check answer & sometimes it goes to lala land when debug code absent
 it "never" seems to when the debug code is present...
 wtf?
 
 9/5/07
 maybe it was the Vector of the student's answer
 so, when checking the answer, read the Vector into an int[]
 then compare the int[]'s
 seems OK
 
 but not ok
 tried two runs
 both generated random problems (different in each case)
 but died when checking (correct) answer to 5th problem
 
 try again
 still dies when checking 4th or 5th answer (I didn't keep track)
 
 9/6/07
 replace nasty vector with int[] and ArrayManipulator to fiddle with them
 additions & deletions work
 but check answer doesn't
 
9/7/07
tried in Controller 
	orgoGame.editAnswerState = null;
before
	orgoGame.editAnswerState = new EditAnswerState(orgoGame, this, problemSet);
still no help

maybe it's the MIDP 1 simulator.

try as midp 2 - use "MSA" as "Target Platform"

STILL NG!

why does it go into lala land...

9/13/07
put in lots of tracers

	public boolean isCurrentListCorrect() {
		System.out.println("1 - starting to check list");
		int[] correctList = getCorrectAnswer(startingMaterial, product).getList();
		System.out.println("2 - made array of correct answer");
		if (correctList.length != studentsAnswer.length) {
			return false;
		}
		System.out.println("3 - length OK");
		boolean isCorrect = true;
		for (int i = 0; i < correctList.length; i++) {
			if (correctList[i] != studentsAnswer[i]){
				isCorrect = false;
			}
		}
		System.out.println("4 - done checking answer, it was: " + isCorrect);
		return isCorrect;
	}

and 

	public void checkAnswer(){
		System.out.println("0 - told to check answer");
		if (problemSet.isCurrentListCorrect()){
			System.out.println("5c- answer was correct");
			resultAlert = new Alert("Checking Your Answer",
					"You got it right!",
					null,
					AlertType.INFO);
			problemSet.setSuccessfullyCompleted(problemSet.getStartingMaterial(), 
					problemSet.getProduct());
			resultAlert.setTimeout(Alert.FOREVER);
			display.setCurrent(resultAlert);
			problemSet.newProblem();
//			switchToStartingMaterialState();
		} else {
			System.out.println("5i - answer was incorrect");
			resultAlert = new Alert("Checking Your Answer",
					"Your answer is incorrect.",
					null,
					AlertType.ERROR);
			resultAlert.setTimeout(Alert.FOREVER);
			display.setCurrent(resultAlert);
		}
	}

and it locks up like this:
0 - told to check answer
1 - starting to check list
2 - made array of correct answer
3 - length OK
4 - done checking answer, it was: true
5c- answer was correct

so - it gets back from the problemSet.isCurrentListCorrect() AOK
it blows up when making the alert
maybe don't make a new one each time?
or, maybe, I'm using it wrong....

tried moving the alert to EditAnswerState
and re-using the alerts (not new each time)
still NG

maybe using it wrong?
maybe need to run it from a canvas?

try taking Alert out and just doing console output of right/wrong
STILL crashes!

added this to look to see if getting new problem is the issue
	public void checkAnswer(){
		System.out.println("0 - told to check answer");
		if (problemSet.isCurrentListCorrect()){
			System.out.println("5c- answer was correct");
			problemSet.setSuccessfullyCompleted(problemSet.getStartingMaterial(), 
					problemSet.getProduct());
			orgoGame.editAnswerState.showAnswerWasCorrectOrNot(true);
			System.out.println("6 - asking for new problem");
			problemSet.newProblem();
			System.out.println("7 - got new problem");
//			switchToStartingMaterialState();
		} else {
			System.out.println("5i - answer was incorrect");
			orgoGame.editAnswerState.showAnswerWasCorrectOrNot(false);
		}
	}
died here
0 - told to check answer
1 - starting to check list
2 - made array of correct answer
3 - length OK
4 - done checking answer, it was: true
5c- answer was correct
RIGHT
6 - asking for new problem

when it was getting the new problem

try again to be sure...
 - dies in same place
(but clicking the New Problem button has no problem...)

tried this:
	public void newProblem() {
		// see if all done
		if (numSuccessfullyCompletedProblems == totalNumberOfProblems) {
			System.out.println("Yahoo");
		} else {
			studentsAnswer = null;
			startingMaterial = 0;
			product = 0;
			while (isSuccessfullyCompleted(startingMaterial, product)) {
				while (product == startingMaterial) {
					startingMaterial = getRandomInt(0,3);
					product = getRandomInt(0,3);
					System.out.println("trying s=" + startingMaterial + " p=" + product);
				}
			}
		}
	}

trying s=1 p=2
0 - told to check answer
1 - starting to check list
2 - made array of correct answer
3 - length OK
4 - done checking answer, it was: true
5c- answer was correct
RIGHT
6 - asking for new problem
trying s=1 p=2
- then froze

so it's in the new problem thingy...

tried more prints

	public void newProblem() {
		// see if all done
		if (numSuccessfullyCompletedProblems == totalNumberOfProblems) {
			System.out.println("Yahoo");
		} else {
			studentsAnswer = null;
			startingMaterial = 0;
			product = 0;
			while (isSuccessfullyCompleted(startingMaterial, product)) {
				while (product == startingMaterial) {
					startingMaterial = getRandomInt(0,3);
					product = getRandomInt(0,3);
					System.out.println("trying s=" + startingMaterial + " p=" + product
							+ " " + isSuccessfullyCompleted(startingMaterial, product));
				}
			}
		}
		System.out.println("new problem:" + startingMaterial + " " + product);
	}


now get:
trying s=2 p=1 false
new problem:2 1
0 - told to check answer
1 - starting to check list
2 - made array of correct answer
3 - length OK
4 - done checking answer, it was: true
5c- answer was correct
RIGHT
6 - asking for new problem
trying s=2 p=0 false
new problem:2 0
7 - got new problem
0 - told to check answer
1 - starting to check list
2 - made array of correct answer
3 - length OK
4 - done checking answer, it was: true
5c- answer was correct
RIGHT
6 - asking for new problem
trying s=2 p=2 true
trying s=0 p=0 true
trying s=2 p=1 true

it dies in this routine...
but why...

if no problems have been attempted, or none solved sucessfully,
	you can get new problem (via button) as much as you like - no crashes

if you've solved even one correctly, then, if you ask for enough new probs
	via the button, it will eventually crash...
	
what's up?

9/18/07
try putting prints in the random number generator

	public int getRandomInt(int min, int max){
		System.out.println("asking for random #");
		int r = Math.abs(randomizer.nextInt());
		System.out.println("got random #");
		return (r % (max - min)) + min;
	}

it does not die in the middle of this

so it's not in the random # gen

try removing the internal while loop in the new problem routine
since not needed - we already mark the diagonal as done.

	public void newProblem() {
		// see if all done
		if (numSuccessfullyCompletedProblems == totalNumberOfProblems) {
			System.out.println("Yahoo");
		} else {
			studentsAnswer = null;
			startingMaterial = 0;
			product = 0;
			while (isSuccessfullyCompleted(startingMaterial, product)) {
				startingMaterial = getRandomInt(0,3);
				product = getRandomInt(0,3);
				System.out.println("trying s=" + startingMaterial + " p=" + product
						+ " " + isSuccessfullyCompleted(startingMaterial, product));
			}
		}
		System.out.println("new problem:" + startingMaterial + " " + product);
	}

seems OK now...
tested by getting one right and then repeatedly asking for new problem
no freezes

aargh - it wasn't the memory running out
under the old newProblem, if a non-diagonal was generated by the inner loop 
then the outer loop would run forever
since the inner loop, seeing that sm <> prod would not give a new value
test to be sure - put it back and included print stmt

- remove all print stmts

still goes into lala land but takes longer

hmmm, the random # generator gives #s 0,1,2 but never see 3
if that were so, then you'd go into an infinite loop once all the 0 1 2 probs were 
done!
maybe need to fix.
getRandomInt(0,4) gives #s b/w 0 and 3
(since it does modulo 4 which gives values from 0 to 3)

put back the Vector stuff for student's answer (it is cleaner than the array thing)

tested AOK!!!

still need to work on what it does when it quits

9/22/07
fixed up constructors of problemSet, orgoGame, Controller to be no-arg
and then have setter methods.
that way, all can know about all without having trouble of who is made first

started adding timer stuff
got it working

tried to make the Lists be Forms with lists
so I could show the elapsed time
this sux!
you can add labels, but they are part of the scrolling list in the form!
also to select from a list, you have to click it and then click select
PUNT

problem - now, the success alert disappears after a short interval
maybe interference from the update display thingy.

maybe make it a ProblemSolvedState

9/23/07
made ProblemSolvedState
made WrongAnswerState
got them working.
set timer to pause when in these states
made AllDoneState
looks good & works

need to clean up interactions, links and uniform design
especially the state changing stuff

9/26/07
began massive refactoring to clean up design
did all except controller commandAction()
also need to get the timer working

9/27/07
finished refactoring - works!

10/11/07
tried sending to server

need to make jar with the images folder in it

load from CVS
build with Wireless Toolkit 2.5.1
go to classes & delete all CVS folders (also the one in images)
in bin
jar cvmf MANIFEST.MF OrgoGame.jar -C ../classes .

sent up to server
it works!
but -
 - it is too big for my cell phone's screen!
 - sometimes, it messes up the menus (puts them in different places)

NOTE - it won't properly go back into CVS once you've done this procedure
it complains that manifest and another file were added by someone else...

10/13/07
tagged as version 1.0
make new version that draws molecules based on cml files

10/20/07
working on multiple bonds
if vertical or horizontal AOK
but not if diagonal - offsets seem to be working but bonds too close together
	probably a rounding thing
got it working
even with triple bonds

posted on web
my cellphone is still too small...

10/21/07
massive recoding
make a new Molecule[] with all new Bonds and Atoms when scaling
also reports screen size if too small
seems to work....

1/2/07
had to reload windows on laptop
lost settings
when eclipse would check out into wtk, it would not include the bin dir
so there was no jad file and wtk wouldn't open it
had to specifically select bin in cvs view and check out into existing project
that seems to work

3/9/08
added splash screen that shows screen measurements, scale used, and java specs
sent OrgoGame.jar and OrgoGame.jad to website

size mismatch from jad
edited with word pad to set size right
  tested by double-clicking .jad - OK
put new .jad on web AOK!
deleted jar binary (not the .jar file) from bin
can't put in CVS - but OK, the latest version of source is there

4/23/08
added VERSION to OrgoGame 0.9.0
put in splash screen


