package edu.umb.jsAipotu.client.genetics;/* this is the main class - the enetics workshop application * written by Brian White 2004 *  brian.white@umb.edu *   This program is free software; you can redistribute it and/or * modify it under the terms of the GNU General Public License * as published by the Free Software Foundation; either version 2 * of the License, or (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * */ import com.google.gwt.event.dom.client.ClickEvent;import com.google.gwt.event.dom.client.ClickHandler;import com.google.gwt.user.client.ui.Button;import com.google.gwt.user.client.ui.CaptionPanel;import com.google.gwt.user.client.ui.HorizontalPanel;import com.google.gwt.user.client.ui.ScrollPanel;import com.google.gwt.user.client.ui.VerticalPanel;import edu.umb.jsAipotu.client.molGenExp.MolGenExp;import edu.umb.jsAipotu.client.molGenExp.WorkPanel;import edu.umb.jsAipotu.client.molGenExp.Workbench;public class GeneticsWorkbench extends Workbench {	GeneticsWorkPanel upperGeneticsWorkPanel;	GeneticsWorkPanel lowerGeneticsWorkPanel;		ScrollPanel histListScrollPanel;	private GeneticsHistoryList geneticsHistoryList;		private Button sendToUpperButton;	private Button sendToLowerButton;	int nextTrayNumber;	public GeneticsWorkbench (MolGenExp mge) {		super(mge);		setupUI();		nextTrayNumber = 0;	}	private void setupUI() {				VerticalPanel leftPanel = new VerticalPanel();		CaptionPanel histListPanel = new CaptionPanel("History List");		HorizontalPanel buttonPanel = new HorizontalPanel();		sendToUpperButton = new Button("\u21E8Upper Window");		sendToUpperButton.setStyleName("histListButton");		sendToUpperButton.setEnabled(false);		sendToUpperButton.addClickHandler(new ClickHandler() {			public void onClick(ClickEvent event) {				if (geneticsHistoryList.getSelectedHistListItem() != null) {					sendToUpperPanel(geneticsHistoryList.getSelectedHistListItem());				}			}					});		buttonPanel.add(sendToUpperButton);		sendToLowerButton = new Button("\u21E8Lower Window");		sendToLowerButton.setStyleName("histListButton");		sendToLowerButton.setEnabled(false);		sendToLowerButton.addClickHandler(new ClickHandler() {			public void onClick(ClickEvent event) {				if (geneticsHistoryList.getSelectedHistListItem() != null) {					sendToLowerPanel(geneticsHistoryList.getSelectedHistListItem());				}			}					});		buttonPanel.add(sendToLowerButton);			VerticalPanel innerPanel = new VerticalPanel();		innerPanel.add(buttonPanel);		geneticsHistoryList = new GeneticsHistoryList(this, new GeneticsHistListItem());		geneticsHistoryList.setStyleName("geneticsHistList");		histListScrollPanel = new ScrollPanel(geneticsHistoryList);		innerPanel.add(histListScrollPanel);		histListPanel.add(innerPanel);		leftPanel.add(histListPanel);		add(leftPanel);				VerticalPanel centerPanel = new VerticalPanel();		upperGeneticsWorkPanel = new GeneticsWorkPanel("Upper Workpanel", this);		lowerGeneticsWorkPanel = new GeneticsWorkPanel("Lower Workpanel", this);		centerPanel.add(upperGeneticsWorkPanel);		centerPanel.add(lowerGeneticsWorkPanel);		add(centerPanel);	}			public void setCrossTwoButtonsEnabled(boolean b) {		upperGeneticsWorkPanel.setCrossTwoButtonEnabled(b);		lowerGeneticsWorkPanel.setCrossTwoButtonEnabled(b);	}		public void setSelfCrossButtonsEnabled(boolean b) {		upperGeneticsWorkPanel.setSelfCrossButtonEnabled(b);		lowerGeneticsWorkPanel.setSelfCrossButtonEnabled(b);	}		public void setMutateButtonsEnabled(boolean b) {		upperGeneticsWorkPanel.setMutateButtonEnabled(b);		lowerGeneticsWorkPanel.setMutateButtonEnabled(b);	}		public int getNextTrayNum() {		nextTrayNumber++;		return nextTrayNumber;	}			public void addToHistoryList(Object o) {		geneticsHistoryList.add((Tray)o);		mge.clearSelectedOrganisms();	}	public WorkPanel getLowerPanel() {		return null;	}	public WorkPanel getUpperPanel() {		return null;	}	public void sendToLowerPanel(Object o) {		lowerGeneticsWorkPanel.setCurrentTray((Tray)o);	}		public void sendToUpperPanel(Object o) {		upperGeneticsWorkPanel.setCurrentTray((Tray)o);	}		public void enableMoveToHistListButtons() {		sendToUpperButton.setEnabled(true);		sendToLowerButton.setEnabled(true);	}	public void disableMoveToHistListButtons() {		sendToUpperButton.setEnabled(false);		sendToLowerButton.setEnabled(false);	}}