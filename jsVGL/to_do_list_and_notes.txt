use DialogBox for JDialogs (cages etc)
look here for ui info https://developers.google.com/web-toolkit/doc/latest/DevGuideUiPanels
button info http://stackoverflow.com/questions/1456889/image-in-gwt-button
	probably use setHTML() method of Button
will need to make js page that translates back & forth between base64zip and plain text

for images, use imageresource
- where to put images: http://stackoverflow.com/questions/3447311/how-to-clientbundle-in-gwt
- how to use? https://developers.google.com/web-toolkit/doc/latest/DevGuideClientBundle

also good gui stuff here http://examples.roughian.com/index.htm

drawing on a panel http://code.google.com/p/gwt-g2d/wiki/Hello_World - ng -this doesn't work with gwt

color for dominance lines & text #800000

for passing params: 

for positioning the dialogboxes DialogBox.PopupPosition()

for pretty-printing the xml, use http://www.freeformatter.com/xml-formatter.html
 
when the red exclamation point shows up in eclipse, 
	project -> properties -> java build path 
		edit AppEngine to point to specific one - choose the only one in the list
	OR
	project -> properties -> java build path
		gwt-user.jar
			you can find it in /Applications/eclipse/plugins/com.google.gwt.eclipse.sdkbundle../gwt-2.5.0/

when using egit
	saving changes
		team -> add to index
		team -> commit
		team -> push to upstream
	loading from server
		team -> pull

		if pull gives out of sync error
			team -> reset
				HARD reset to master
		then team -> pull

for doing the summary chart - probably not that hard: just do an html table!
chi-square calc from: http://www.quantpsy.org/chisq/chisq.htm
function ChiSq(x,n) { 
   if(n==1 & x>1000) {return 0} 
   if(x>1000 | n>1000) { 
       var q=ChiSq((x-n)*(x-n)/(2*n),1)/2 
       if(x>n) {return q} {return 1-q} 
       } 
   var p=Math.exp(-0.5*x); if((n%2)==1) { p=p*Math.sqrt(2*x/Pi) } 
   var k=n; while(k>=2) { p=p*x/k; k=k-2 } 
   var t=p; var a=n; while(t>0.0000000001*p) { a=a+2; t=t*x/a; p=p+t } 
   return 1-p 
   } 
 
 also from http://www.fourmilab.ch/rpkp/experiments/analysis/chiCalc.html
 http://www.fourmilab.ch/rpkp/experiments/analysis/chiCalc.js
     /*  POZ  --  probability of normal z value

        Adapted from a polynomial approximation in:
                Ibbetson D, Algorithm 209
                Collected Algorithms of the CACM 1963 p. 616
        Note:
                This routine has six digit accuracy, so it is only useful for absolute
                z values < 6.  For z values >= to 6.0, poz() returns 0.0.
    */

    function poz(z) {
        var y, x, w;
        var Z_MAX = 6.0;              /* Maximum meaningful z value */
        
        if (z == 0.0) {
            x = 0.0;
        } else {
            y = 0.5 * Math.abs(z);
            if (y >= (Z_MAX * 0.5)) {
                x = 1.0;
            } else if (y < 1.0) {
                w = y * y;
                x = ((((((((0.000124818987 * w
                         - 0.001075204047) * w + 0.005198775019) * w
                         - 0.019198292004) * w + 0.059054035642) * w
                         - 0.151968751364) * w + 0.319152932694) * w
                         - 0.531923007300) * w + 0.797884560593) * y * 2.0;
            } else {
                y -= 2.0;
                x = (((((((((((((-0.000045255659 * y
                               + 0.000152529290) * y - 0.000019538132) * y
                               - 0.000676904986) * y + 0.001390604284) * y
                               - 0.000794620820) * y - 0.002034254874) * y
                               + 0.006549791214) * y - 0.010557625006) * y
                               + 0.011630447319) * y - 0.009279453341) * y
                               + 0.005353579108) * y - 0.002141268741) * y
                               + 0.000535310849) * y + 0.999936657524;
            }
        }
        return z > 0.0 ? ((x + 1.0) * 0.5) : ((1.0 - x) * 0.5);
    }

 
    var BIGX = 20.0;                  /* max value to represent exp(x) */

    function ex(x) {
        return (x < -BIGX) ? 0.0 : Math.exp(x);
    }   

    /*  POCHISQ  --  probability of chi-square value

              Adapted from:
                      Hill, I. D. and Pike, M. C.  Algorithm 299
                      Collected Algorithms for the CACM 1967 p. 243
              Updated for rounding errors based on remark in
                      ACM TOMS June 1985, page 185
    */

    function pochisq(x, df) {
        var a, y, s;
        var e, c, z;
        var even;                     /* True if df is an even number */

        var LOG_SQRT_PI = 0.5723649429247000870717135; /* log(sqrt(pi)) */
        var I_SQRT_PI = 0.5641895835477562869480795;   /* 1 / sqrt(pi) */
        
        if (x <= 0.0 || df < 1) {
            return 1.0;
        }
        
        a = 0.5 * x;
        even = !(df & 1);
        if (df > 1) {
            y = ex(-a);
        }
        s = (even ? y : (2.0 * poz(-Math.sqrt(x))));
        if (df > 2) {
            x = 0.5 * (df - 1.0);
            z = (even ? 1.0 : 0.5);
            if 
            (a > BIGX) {
                e = (even ? 0.0 : LOG_SQRT_PI);
                c = Math.log(a);
                while (z <= x) {
                    e = Math.log(z) + e;
                    s += ex(c * z - a - e);
                    z += 1.0;
                }
                return s;
            } else {
                e = (even ? 1.0 : (I_SQRT_PI / Math.sqrt(a)));
                c = 0.0;
                while (z <= x) {
                    e = e * (a / z);
                    c = c + e;
                    z += 1.0;
                }
                return c * y + s;
            }
        } else {
            return s;
        }
    }
 
 testing
 
 9/15/13
 to enable "just try it" as a success state
 	need to add parameter to "grade":
 		NumCrosses
 
 10/8/13
 to do: make a way to hide useless crosses
 	checkbox to display or not?
 	shrink them to one line?
 
4/4/18
need to think about how to get this out there to people
thinking about LMS integration
several options

---- LMS INTEGRATION ----
** ALLEGEDLY GENERIC **
1) LTI - this is generic-ish across LMS's 
	https://www.edu-apps.org/code.html - good intro
	http://acrl.ala.org/techconnect/post/making-a-basic-lti-learning-tools-intoperability-app/ - good also and links to a talk on this
	https://github.com/Harvard-ATG/workshop-lti-basic - the presentation is cool
BUT - LTI 1.1 only supports sending grades - not saving state (but this is 2014 data)
	LTI 2.0 might be better - but it may be dead https://mfeldstein.com/ims-failed-lti-2-0/

** specific LMS **
2) Moodle 
	it looks like saving user data is possible, but integration is a pain
		https://stackoverflow.com/questions/43312505/how-to-save-custom-user-data-in-moodle

3) Blackboard is even worse...

CONCLUSION: Naaah...

---- E-COMMERCE SITE ----
- won't make much $
- teachers might not use it as much
- copyright issues

---- HOST OWN SITE ----
1) For demo purposes, it may go a long way to make a single web page 
	with links to nice pages with headings for each of the currently-existing VGL problems
	- problems:
		no grading
		no saving work

2) Bigger site backed by MySQL database and accounts, etc
	accounts
		register
		confirmation e-mail
		reset password etc
	save work
		if untouched in 6 months, send e-mail warning of deletion
		if untouched in 1 year, delete
	when they login; get a choice
		new problem
			list of problems page from (1)
		open work
			list of all the problems they've saved
		grading
			can click once to submit for grading
				how to prevent repeated tries? 
					delete problem on submission?
					mark it as submitted and switch to practice mode?
				if success
					get page with their name, problem type, date, time, and success
					and an encrypted string of this 
						teacher can copy paste into app to decrypt and verify
						(not super secure)
- can do research on how they approach problems

BUT - will require significant server resources
how much?
look at logfiles for downloads and assume each download would correspond to 2-5 problems
grep out the lines containing the different VGL packages and pipe to wc -l 
	MacNG (no grader) = VGLII-3.3.2.NG.zip
	Mac Grader = VGLII-3.3.2.mac.zip
	PC = VGLII.pc.zip
	Linux = VGLII.tar.gz

FILE	start date		end date		#MacNG	#MacG	#PC		#Linux	TOT
log.8	04/Feb/2018		11/Feb/2018		195		77		405		7		684
log.7	11/Feb/2018		18/Feb/2018		155		68		525		34		782
log.6	18/Feb/2018		25/Feb/2018		36		12		51		2		101
log.5	25/Feb/2018		04/Mar/2018		75		18		257		6		356
log.4	04/Mar/2018		11/Mar/2018		68		6		169		2		245
log.3	11/Mar/2018		18/Mar/2018		68		14		127		2		211
log.2	18/Mar/2018		25/Mar/2018		48		4		44		4		100
log.1	25/Mar/2018		01/Apr/2018		208		20		181		0		409
log		01/Apr/2018		04/Apr/2018		30		5		161		1		197
TOTAL   59 days 						883		224		1920	58		3085
										29%		7%		62%		2%

3085 in 59 days = 52 downloads per day
if each corresponds to 2-5 problems, that is about 100-250 per day or about 5-10 per hour

per year, that's 19,000 downloads or about 100,000 problems we'd have to save
even if each were 1Kb, that'd only be 100Mb to save
so not very demanding

so, could probably host on UMB's servers.

---- ADD LOAD AND SAVE WORK OPTION ----
it looks like this might be possible!
	saving files https://github.com/eligrey/FileSaver.js
		even zip files https://stackoverflow.com/questions/21997057/how-to-use-filesaver-js
		would need some weak encryption.
		looks like it ends up as a file on your desktop
	loading files 
		https://www.html5rocks.com/en/tutorials/file/dndfiles/ 

6/5/18
repeated the log analysis

FILE	start date		end date		#MacNG	#MacG	#PC		#Linux	TOT
log.8	08/Apr/2018		15/Apr/2018		138		24		147		3
log.7	15/Apr/2018		22/Apr/2018		139		22		76		6
log.6	22/Apr/2018		29/Apr/2018		36		8		39		0
log.5	29/Apr/2018		06/May/2018		24		4		14		2
log.4	06/May/2018		13/May/2018		0		0		9		0
log.3	13/May/2018		20/May/2018		2		1		18		0
log.2	20/May/2018		27/May/2018		30		2		7		0
log.1	27/May/2018		03/Jun/2018		3		2		5		0
log		03/Jun/2018		05/Jun/2018		0		0		0		0



 