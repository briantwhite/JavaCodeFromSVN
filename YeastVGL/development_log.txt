2/9/18
started developing with the genotype-phenotype map
start that with a pathway

							|--(enz 1)--> 2 --(enz 2)--> 3
	molec 0 --(enz 0)--> 1 -|
	        				|--(enz 3)--> 4 --(enz 4)--> 5 --(enz 5)--> 6
	        				
recursive tracing seems to be working

2/10/18
made simple GUI for playing

----------------------------
BIG PICTURE

works in phases

1) it generates ~20 mutants randomly in the genes - single mutants
	make sure that all are hit at least once

2) presents them in complementation test table 20x20
	user selects medium for complementation test and it shows table of +, -
	user can drag columns of table to make nice groups (it looks like this is built into tables)
	https://docs.oracle.com/javase/7/docs/api/javax/swing/JTable.html says "By default, 
	columns may be rearranged in the JTable so that the view's columns appear in a different 
	order to the columns in the model."

3) user selects certain mutants to put in "working set"
	can edit this set

4) go to pathway where you can make a multiple mutant and see which media is grows on
	(like the current toy version) 
	where the mutants in the working set are the choices
	
5) mapping?


2/12/18
started working on MutantSet and mutant generation.

working on complementation test table - not working yet..

2/13/18
the problem was that new ArrayList<Integer>(new Integer(1)) makes an ArrayList of LENGTH 1
	not a list that starts with one member...

now seems to be working
it'd be nice, when you reorder the columns, that you also re-order the rows the same.
DefaultTableModel (which you gan get with getModel() from the table) has a moveRow() method
need to find out which colum moved.

the problem is that moveRow() exists only in DefaultTableModel and I don't want a Default
	since I don't want the contents to be editable.
now can drag the columns and no errors with moveRow but the rows don't actually move...

may have to make a method that changes the data in the table - now it works.

2/14/18
try custom header renderer http://www.codejava.net/java-se/swing/jtable-column-header-custom-renderer-examples

		complementationTable.getTableHeader().setDefaultRenderer(new CheckBoxHeaderRenderer());
AND

	class CheckBoxHeaderRenderer extends JPanel implements TableCellRenderer {
		JLabel label;
		public CheckBoxHeaderRenderer () {
			label = new JLabel();
		}
		public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus,
				int row, int column) {
			if (column == 0) {
				label.setText(" ");
				add(label);
			} else {
				label.setText("M" + (column - 1));
				add(label);
//				add(checkboxes[column]);
			}
			return this;
		}
	}

but that fails since, when you drag, it renumbers the columns in order 0-15 not in revised order.

hmmm....

would also like to prevent the first column from being dragged to or from
https://stackoverflow.com/questions/1155137/how-to-keep-a-single-column-from-being-reordered-in-a-jtable/1155277#1155277
the last solution there might work...

tried moving the ComplementationTable to a separate class that extends JTable and it didn't work
	the drag only dragged the column headers...
went back to complex class ComplementationTestPanel - punt for now

put things in tabs

found a solution to the dragging column thing
	https://coderanch.com/t/346302/java/Restrict-User-Move-Column-JTable
need to put this right after constructor and right before setting the table model or it's all messed up

made sketch of what the Complementation table panel should look like in "notes/Comp test panel notes - 0.png"

2/15/18
working on putting a JComboBox for selecting the complementation group into the last column
can get a combobox in there but it won't hold the value...

go back and do it carefully like the official page says:
https://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data

put the JComboBox in the column and then set a custom renderer.
can get the JComboBox in there but it doesn't respond to clicking
seem to need to set up a custom editor.
	try having the ComplementationGroupComboBox be an editor
PUNT - just make the last cells editable so students can type in their own group.

hmmm - to make a cell editable, you need to add to the TableModel the setValueAt() method
maybe that was what was needed for the combo boxes...
try one last time - NG
	you can edit one once but
		you can't edit any others
		it doesn't move when you drag a column
REALLY PUNT - and use user-entered text for complementation group name

works now with text input

need to figure out how to save the state - xml is a pain with the added libraries, maybe there's an easier way?
it looks like json may be better http://www.oracle.com/technetwork/articles/java/json-1973242.html 
but it's not built-in <sigh>

2/16/18
try using gson - google's json library
try installing it like https://medium.com/programmers-blockchain/importing-gson-into-eclipse-ec8cf678ad52
from http://repo1.maven.org/maven2/com/google/code/gson/gson/2.8.2/
	got gson-2.8.2.jar and put in YeastVGL/lib/
	in Eclipse=> prefs (not the prefs for this project)
		java build path => user libraries
		new "gson_lib"
		add the jar as an external jar
	in prefs for this project
		build path => add libraries => user library => choose "gson_lib"
but it has an error flag that says the jar is missing...
	did a refresh and it's OK.
	
had to add line to build.xml to include the jar
	<target name="jarfile" depends="compile" description="makes jar file">
	    <jar destfile="bin/YeastVGL.jar">
	        <manifest>
	        	    <attribute name="Main-Class" value="YeastVGL.YeastVGL"/>
	        </manifest>
    	    <fileset dir="bin/"/>
	    	<zipfileset src="lib/gson-2.8.2.jar"/>
	    </jar>

2/26/18
working on saving and restoring the complementation table - including the results of rearranging it
it seems that 
	public String getJsonString() {
		Gson gson = new Gson();
		return gson.toJson(data);
	}
works to get out the revised table - now see if you can save it and read it back in
reading it in is AOK - EXCEPT: the column headings are in original order
	it seems that moving columns changes the DISPLAY not the underlying table

hmmm - actually, the saving isn't quite right - the rows are in the right order but the columns aren't...
may need to, when moving columns, actually change the underlying column data
	that's NG - then the column never gets swapped...
	
try swapping the columns when you go to save it.
that was a pain, but it now works.

made WelcomePane to start a new problem or load a saved one

2/27/18
getting open and save working

3/1/18
to do
- instructions pane for pathway panel
- work out working set details
	have them displayed on the left of the pathway panel in vertical column
		"check boxes for mutations to be included in your strain"
			"no checked boxes = wild type"
			[] mutation in strain m3 - complementation group fred (don't print it if it's the default text)
	do an aggregate genotype
		the reverse of the complementation test
			if any is false, make it false

got complementation group labeling to save (and cg is now part of each MutantStrain)
working on getting the working set to show in the PathwayPanel.
	need, if nothing in working set, to display message in panel "none selected"

3/2/18
working on pathway panel to use the working set
something's strange about the "will it grow" - maybe the composite genotype is wrong?

it may be working - need to check carefully
lots of printing in PathwayPanel to clean out when it's going.

3/5/18
need to build a tool to have them enter their answer for the pathway
	not a tool to help them figure it out - too complicated and idiosyncratic
see the sketch "/YeastVGL/notes/tool for drawing pathways - 0.png"
use a grid of little panels with a popup menu like in Pelican.java line 2066 (Pelican extends JPanel)
		private void maybeShowPopup(MouseEvent e)  {

			int x = e.getX();
			int y = e.getY();

			final Component c = getComponentAt(x,y);

			if (c instanceof PelicanPerson) {
				PelicanPerson p=(PelicanPerson)c;
				if (e.isPopupTrigger()) {
					if (p.isOrphan()) Parents.setEnabled(true);
					else Parents.setEnabled(false);
					popup.show(e.getComponent(),x,y);
					currentPerson=(PelicanPerson)c;
				}
				else {
					if (mergeEnabled) {
						mergePerson((PelicanPerson)c);
						updateDisplay();
					}
					else {
						currentPerson=(PelicanPerson)c;
					}
				}
			}
			setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
			mergeEnabled=false;

		}

- indicate the essential terminal products with green letters.
have light pastel colored columns to indicate type
	molecule
	link
	enzyme
- have the tile images share the background color

for scoring
	convert to pathway as used in the program
	walk recursively thru both while comparing
		like the pedigree solver
		if you exhaust all possibilities in the "correct" one without a match - it's wrong
		
as they draw, can use the check pedigree code and have a little text window with "problems"

first, to make this work, they can't have arbitrarily long names for the complementation groups
	since they'll be in the labels
but the JMenu didn't work
	how about a JPopupMenu like in the PedigreeExplorer?
got that working.

did some refactoring of the complementation test panel - it was getting a little busy
got all the errors fixed but a null pointer thingy that doesn't make sense...

3/6/18
for the panels in the pathway drawing thingy
	have each type of panel be concrete subclass of an abstract master class
	
first, get the refactoring back on track...
got the null pointer issue fixed but now the column headings drag but nothing else moves...
maybe it's because ComplementationTable.java extends JTable instead of including a JTable?

crap, now it's really hosed - maybe go back to old code...

can't seem to go back easily in git...

3/7/18
go back to old ugly code for ComplementationPanel - rebuild until it works, then maybe refactor more carefully..
got it going
only major change is to make the instrucion panel it's own class

but now, it keeps asking me for the branch (I enter "master") each time I commit
	how to nuke the other branches?
	try instructions from here https://stackoverflow.com/questions/8625406/how-to-delete-a-branch-in-the-remote-repository-using-egit/8625647
		deleted HEAD
let's see
not quite...
maybe merge?
	nope
try deleting the local master branch - NG
try a hard reset after committing this
it warns about "detached HEAD"
so followed this http://learnwebtutorials.com/you-are-in-detached-head-state-how-fix

Brians-MacBook-Pro:JavaCodeFromSVN brianwhite$ git status
HEAD detached from 0f28d462
...
Brians-MacBook-Pro:JavaCodeFromSVN brianwhite$ git branch temp
Brians-MacBook-Pro:JavaCodeFromSVN brianwhite$ git checkout temp
...
Brians-MacBook-Pro:JavaCodeFromSVN brianwhite$ git status
On branch temp
....
Brians-MacBook-Pro:JavaCodeFromSVN brianwhite$ git checkout master
M	OrgoGame/bin/AllDoneState.class
M	OrgoGame/bin/Utilities.class
M	OrgoGame/bin/WrongAnswerState.class
Branch master set up to track remote branch master from origin.
Switched to a new branch 'master'
Brians-MacBook-Pro:JavaCodeFromSVN brianwhite$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
....
Brians-MacBook-Pro:JavaCodeFromSVN brianwhite$ git branch -d temp
Deleted branch temp (was 373d0faf).
	
finally OK - no more fussing when I try to commit...

try getting the pathway panel to work
make a first test tab to make it come up quickly.

3/8/18
make the pathway drawing panel be 3 tiles tall and long enough to fit a purely linear pathway - 
	it takes 5 tiles for one step, so need 30 tiles
have the left-most column have all fixed tiles
	top & bottom = blank
	middle = non-changable "precursor"
	
for processing, put references to all tiles in DrawingPanelTile[][] so you can iterate over them and find neighbors

3/12/18
need to fix it a little - if you set an enzyme or molecule to a molecule and then try to set it back to blank,
	it won't clear.
forgot to add a listener to the "-" menu item.

new problem - when the display is scrolled, you have to fight with the pop-up menus
	maybe don't use the setComponentPopupMenu since it requires a double-finger click
		control-click works OK
but a single click is more intuitive.
better to build it like http://www.zentut.com/java-swing/how-to-create-popup-menu-in-java-swing/
	but don't even test to see if the mouse event is a popup trigger (that limits it to control-click)
fix all to this.

much better.

need to
1) get it to save and re-load
	don't just serialize - use the array of tiles and get their indices
2) convert to pathway for analysis and scoring

3/13/18
set up nice regular getSelection() and setSelection() methods for the tiles to make it small to save them.
	when saving them, use a letter for type and an int for the selection
	make a SavedTile class that is constructed from a submitted tile.
had to stop in the middle of moving the getJsonString() method to YeastVGL where it belongs.

3/14/18
got saving working
it turned out the assembly of blocks into the PathwayDrawingPanel left a null every 5 <sigh>
	fixed that
working on restoring saved state of PathwayDrawingPanel
	got it working!
	
now need to turn it into a pathway.
one tricky thing - the enzymes in the original pathway are numbered in order of creation 
	roughly in pathway order
but the ones in the figure might not have the same order...
	but at least, you can build a pathway...
but also - the numbers in the original pathway are compact (use all the numbers from 0 to numEnzymes etc)
	but the drawn one may have gaps...
maybe it doesn't matter since you can just connect them
	so use a serial number when creating them and give them a field "label" for what they're called in the 
		drawn pathway.
got it to find the precursor - that's the starting point.

3/15/18
to do the proper comparison, you'll need to use the actual mutant numbers
	start from the CG they give and use that to look up the enzyme number
for this to work, the CG assignments must be right as well as the working set
	before you can proceed

so:
1) check CG assignments
	2 warnings (red text under the CG table):
		- not all the mutant strains have been assigned to a CG
		- assignments are incorrect
			make an array of enzymeLabels (String[]) indexed by enzyme number
			go mutantStrain by mutantStrain
				using it's enzyme number, enter into the enzymeLabels[] the CG it was assigned to
					if enzymeLabels[] is blank - add in the CG
					if it contains a label - if it matches the current mutantStrain's one - OK
						if not, throw an error
		
2) check that all CGs have at one and only one member in working set
	2 warnings (red text under working set selection)
		- not all CGs represented in your set
		- at least one CG represented more than once

3/16/18
working on scoring the complementation table
save one with hopefully correct assignments to test
here's the mutant data:
     [java] Pathway is OK
     [java] M:0  E0+ E1+ E2+ E3- E4+ E5+  mutatedGeneIndex:3 CG:
     [java] M:1  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:2  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:3  E0+ E1+ E2+ E3+ E4+ E5-  mutatedGeneIndex:5 CG:
     [java] M:4  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:5  E0+ E1+ E2+ E3+ E4- E5+  mutatedGeneIndex:4 CG:
     [java] M:6  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:7  E0+ E1+ E2+ E3+ E4+ E5-  mutatedGeneIndex:5 CG:
     [java] M:8  E0- E1+ E2+ E3+ E4+ E5+  mutatedGeneIndex:0 CG:
     [java] M:9  E0+ E1- E2+ E3+ E4+ E5+  mutatedGeneIndex:1 CG:
     [java] M:10  E0+ E1- E2+ E3+ E4+ E5+  mutatedGeneIndex:1 CG:
     [java] M:11  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:12  E0+ E1+ E2+ E3+ E4+ E5-  mutatedGeneIndex:5 CG:
     [java] M:13  E0+ E1+ E2+ E3- E4+ E5+  mutatedGeneIndex:3 CG:
     [java] M:14  E0+ E1+ E2+ E3+ E4+ E5-  mutatedGeneIndex:5 CG:

this matches the table
	CG A (enzyme 3): M0, M13
	CG B (enzyme 2): M1, M2, M4, M6, M11
	CG C (enzyme 5): M3, M7, M12, M14
	CG D (enzyme 4): M5
	CG E (enzyme 1): M9, M10
	CG F (enzyme 0): M8

saved as "correctCGs.yvgl"
but it generates the warning "not all cgs assigned correctly"
use debugger to look at arrays

the problem is, we're using the row index as equal to the mutant number and they're not in order anymore...
	need to find the actual mutantStrain number at that row in (now scrambled) table
fixed

need to make another for test purposes - also call it "correctCGs.yvgl"
     [java] M:0  E0+ E1+ E2+ E3- E4+ E5+  mutatedGeneIndex:3 CG:
     [java] M:1  E0+ E1+ E2+ E3- E4+ E5+  mutatedGeneIndex:3 CG:
     [java] M:2  E0+ E1- E2+ E3+ E4+ E5+  mutatedGeneIndex:1 CG:
     [java] M:3  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:4  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:5  E0+ E1- E2+ E3+ E4+ E5+  mutatedGeneIndex:1 CG:
     [java] M:6  E0- E1+ E2+ E3+ E4+ E5+  mutatedGeneIndex:0 CG:
     [java] M:7  E0+ E1+ E2+ E3- E4+ E5+  mutatedGeneIndex:3 CG:
     [java] M:8  E0+ E1+ E2+ E3- E4+ E5+  mutatedGeneIndex:3 CG:
     [java] M:9  E0+ E1+ E2+ E3+ E4- E5+  mutatedGeneIndex:4 CG:
     [java] M:10  E0+ E1+ E2+ E3- E4+ E5+  mutatedGeneIndex:3 CG:
     [java] M:11  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:12  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:13  E0+ E1+ E2+ E3+ E4+ E5-  mutatedGeneIndex:5 CG:
     [java] M:14  E0+ E1+ E2+ E3+ E4- E5+  mutatedGeneIndex:4 CG:

works now

NEXT - be sure the working set contains one from each CG

got this going but had to make new file - also called "correctCGs-noWS.yvgl"
and then set a correct working set to test restoration of state "correctCGs-full.yvgl"
     [java] M:0  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:1  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:2  E0+ E1- E2+ E3+ E4+ E5+  mutatedGeneIndex:1 CG:
     [java] M:3  E0+ E1+ E2+ E3- E4+ E5+  mutatedGeneIndex:3 CG:
     [java] M:4  E0+ E1+ E2+ E3- E4+ E5+  mutatedGeneIndex:3 CG:
     [java] M:5  E0+ E1+ E2+ E3+ E4+ E5-  mutatedGeneIndex:5 CG:
     [java] M:6  E0+ E1+ E2+ E3- E4+ E5+  mutatedGeneIndex:3 CG:
     [java] M:7  E0+ E1+ E2+ E3+ E4+ E5-  mutatedGeneIndex:5 CG:
     [java] M:8  E0- E1+ E2+ E3+ E4+ E5+  mutatedGeneIndex:0 CG:
     [java] M:9  E0+ E1+ E2+ E3+ E4+ E5-  mutatedGeneIndex:5 CG:
     [java] M:10  E0+ E1- E2+ E3+ E4+ E5+  mutatedGeneIndex:1 CG:
     [java] M:11  E0+ E1+ E2+ E3+ E4+ E5-  mutatedGeneIndex:5 CG:
     [java] M:12  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:13  E0+ E1+ E2+ E3+ E4- E5+  mutatedGeneIndex:4 CG:
     [java] M:14  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:

the problem was that it wasn't saving the CG when it saved a SingleMutantStrain
	needed to add a constructor that takes a complementationGroup as an argument
	then the JSON will do it right

now scores and saves right.

put the test files in testFiles/

3/21/18
working on converting a pathway drawing into a pathway
save previous work with a pathway drawn "correctCGs-pathway.yvgl"
ugh - it's based on "correctCGs-full.yvgl" which opens just fine 
	but this one, where I only changed the drawn pathway, gives a null pointer ...
somehow, I changed something so that the complementationGroup of each mutantStrain is not being saved...
	maybe delete the constructor that doesn't take a complementation group
		still NG - WTF? it was working fine before...
put back the constructor that assigns default CG = "" for now
the docs say you need a no args constructor in the class
	add one to SingleMutantStrain
		still NG
or, maybe the CGs aren't there when it gets saved when loaded from a file
	check that
weird, when it gets saved, when it makes the State object, the CGs are missing from the mutantSet
	both in the State and the program
what nuked them - they're in the table??
	probably, that wasn't what "fixed" things before
		delete the SingleMutantStrain constructor that takes a cg as an argument
		figure out what's doing this..
the problem is that there are multiple versions of the mutantSet - need to have all refer back to the one in YeastVGL
take the private mutantSet out of ComplementationTestPanel and replace with yeastVGL.getMutantSet() and setMutantSet()
now it works - it must've been an issue with the local version of mutantSet in ComplementationTestPanel

now make a version with a drawn pathway based on "correctCGs-full.yvgl" called "correctCGs-pathway.yvgl"
(this pathway is not correct)
  C:0  1   2    3    4    5    6    7    8    9    10   11   12   13   14   15  16   17   18   19   20
R0	                                          +-> enz 2 --> mol 3
                                   	          |
R1	P --> enz 0 --> mol 1 --> enz 1 --> mol 2 +-> enz 3 --> mol 4 --> enz 4 --> mol 5 --> enz 5 --> mol 6

R2
started working on recursive search..

3/22/18
notes:
	- need to use arrays of enzymes and molecules since you'll need to refer to them by number
	- need to think carefully about keeping references as you walk the tree (pass them in as the growing pathway?)
it looks like the type of the drawingTiles is not being restored.
	is it being saved in the file? YES
	need to fix the updateSelectedTile() method in each kind of Tile

it walks the tree down branches now

added PathwayDrawingException to flag when they draw strange things

got it to make a valid pathway from the above saved file
now, need to deal with weird pathways

while building pathway
	- when saving a new molecule or enzyme, fail if there's already one at that #
		"enzyme 2 appears in 2 places"
	- all branches must end with a molecule
	- no dead end arrows
	- no bent arrows not connected to forked arrows
	
don't test integrity if it fails any of the above

at start of testing
	- be sure no nulls in the enzymes[] and molecules[]
		"you did not include enzyme 5 in the pathway"
	- all enzymes have substrate and product
	- all molecules have a next enzyme unless terminal
	- all branches must trace back to molecule 0 (already part of integrity testing)

got all of these working and it drives a JLabel with the status of the pathway when you check it.

3/25/18
for scoring, can just go enzyme-by-enzyme and check all substrates & products
	might not need to check the molecules (?)
	can report "trouble with enzyme 3" as a hint

3/28/18
working on compare - NG, it says different numbers of enzymes...

3/29/18
silly errors
now fixed 
saved version with correct pathway "correctCGs-correctPathway.yvgl"
checks out OK!

need to get the various messages working OK
	the errors are OK but need a success message

3/30/18
working on details
oops - the CGs in the drawing panel don't match the ones in the working set.
	set up some lookups
		cgNames => use enzyme/gene number to find cg name letter
		cgNumbers => use cg name letter to find enzyme/gene number

4/3/18
note: be sure that the info in those lookups is preserved across a save
	or restored on load (probably)
	- and is still changable and savable

4/4/18
set up to use the cgNames and cgNumbers to display properly.
PROBLEM - when you first run it (or anytime the CG list isn't complete), you get a null pointer
	since the cgNames and cgNumbers don't exist
	NEED a smart solution...
		default list??
		warning message in list??
		* if null, just show the list with only a "-"
			need to do this carefully...

4/5/18
take out null test to look carefully
	may be smart to build the cgNames early?

the problem is, when you build the PathWayDrawingPanel for the first time, you need to build EnzymeTiles
	and, to build an EnzymeTile, you need that list of complementation group names
maybe, if there's no working set yet, have the EnzymeTile's menu just say "No Complementation Groups Defined Yet" 
	and prevent a choice.
OK - what's the best way to detect that?
on startup, at this line (that throws the null pointer error)
		String[] cgChoices = yeastVGL.getPathwayPanel().getCGNames();
it's called in the constructor of PathwayPanel, so that's the null part
	test for that.
	seems OK now

now, get a null pointer when you load saved work
	need to fire PathwayPanel.updateWorkingSet() earlier

try in YeastVGL adding the ** line
	public void restoreSavedState(State state) {
		ctp.restoreSavedState(state);
**		pp.updateWorkingSet(ctp.getWorkingSet());
		pp.getPathwayDrawingPanel().restoreSavedState(state);
	}
now get index out of bounds...
hmmm it's the index of the mutantStrains that's not right...
	want to use getMutatedGeneIndex()

OK - no errors now but cg choices are not in alphabetical order...

so check if it's OK

							|--(enz 1)--> 2 --(enz 2)--> 3
	molec 0 --(enz 0)--> 1 -|
	        				|--(enz 3)--> 4 --(enz 4)--> 5 --(enz 5)--> 6
	        				
     [java] M:0  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:1  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:2  E0+ E1- E2+ E3+ E4+ E5+  mutatedGeneIndex:1 CG:
     [java] M:3  E0+ E1+ E2+ E3- E4+ E5+  mutatedGeneIndex:3 CG:
     [java] M:4  E0+ E1+ E2+ E3- E4+ E5+  mutatedGeneIndex:3 CG:
     [java] M:5  E0+ E1+ E2+ E3+ E4+ E5-  mutatedGeneIndex:5 CG:
     [java] M:6  E0+ E1+ E2+ E3- E4+ E5+  mutatedGeneIndex:3 CG:
     [java] M:7  E0+ E1+ E2+ E3+ E4+ E5-  mutatedGeneIndex:5 CG:
     [java] M:8  E0- E1+ E2+ E3+ E4+ E5+  mutatedGeneIndex:0 CG:
     [java] M:9  E0+ E1+ E2+ E3+ E4+ E5-  mutatedGeneIndex:5 CG:
     [java] M:10  E0+ E1- E2+ E3+ E4+ E5+  mutatedGeneIndex:1 CG:
     [java] M:11  E0+ E1+ E2+ E3+ E4+ E5-  mutatedGeneIndex:5 CG:
     [java] M:12  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:
     [java] M:13  E0+ E1+ E2+ E3+ E4- E5+  mutatedGeneIndex:4 CG:
     [java] M:14  E0+ E1+ E2- E3+ E4+ E5+  mutatedGeneIndex:2 CG:

	enzyme		enzyme 		mutantstr	gene mutated
	label		position	chosen for 	in that
	on panel	in pathway	that CG		mutant strain
	-------		---------	---------	----------
	CG E 		enz 0		M8			gene 0
	CG B		enz 1		M2			gene 1
	CG C		enz 3		M3			gene 3
	CG A		enz 2		M0			gene 2
	CG F		enz 4		M13			gene 4
	CG D		enz 5		M5			gene 5

ALL MATCH OK - so the assigning works OK.

try some tests
1) change the cg to a wrong one in the pathway
	check pathway: get error
	change it back
	check pathway: ok

2) open the one with the incorrect pathway
	fix the pathway
	check pathway: OK
	save it
	reopen
	check pathway: OK
	
3) start new and work it out and be sure OK
 	OK!
 	
seems good to go to Sophie
will need layout...
	